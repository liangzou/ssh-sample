<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/context          
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">                        
<context:annotation-config/>
<context:component-scan base-package="cn.edu.njupt"/>  
 <aop:aspectj-autoproxy/>
<!--  <tx:annotation-driven transaction-manager="txManager"/> -->
 
 <bean id="txManager" 
            class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
 
 
  <bean id="StudentService" class="cn.edu.njupt.service.StudentService">
  </bean>
  
  <!-- more bean definitions go here -->
   <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
     <property name="driverClassName" value="${jdbc.driverClassName}"/>
     <property name="url" value="${jdbc.url}"/>
     <property name="username" value="${jdbc.username}"/>
     <property name="password" value="${jdbc.password}"/>
 </bean> 
 
 
   <!--  JNDI  --> 
 <!-- <bean id="myDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
     <property name="jndiName" value="java:comp/env/jndi/demo"></property> 
 </bean> -->
 
   <!-- Oracle -->
  <bean id="myDataSource_oracle" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <!-- results in a setDriverClassName(String) call -->
     <property name="driverClassName" value="${jdbc.driverClassName1}"/>
     <property name="url" value="${jdbc.url1}"/>
     <property name="username" value="${jdbc.username1}"/>
     <property name="password" value="${jdbc.password1}"/>
 </bean>
 
 <tx:advice id="txAdvice" transaction-manager="txManager">
  <!-- the transactional semantics... -->
  <tx:attributes>
    <!-- all methods starting with 'get' are read-only -->
    <tx:method name="get*" read-only="true"/>
    <!-- other methods use the default transaction settings (see below) -->
    <tx:method name="*" propagation="REQUIRED"/>
  </tx:attributes>
  </tx:advice>
  
  <!--  aop Demo for add log -->
  <aop:config>
    <aop:aspect id="myAspect" ref="LogHander">   
    <aop:pointcut id="StudentServicess" expression="execution(public * cn.edu.njupt.service.*.add*(..))"/>
    <aop:before pointcut-ref="StudentServicess" method="log"/>    
    </aop:aspect>
  </aop:config>
  
  <!--  transaction manager -->
   <aop:config>
     <aop:pointcut id="StudentServices" expression="execution(public * cn.edu.njupt.service.*.*(..))"/>
     <aop:advisor advice-ref="txAdvice" pointcut-ref="StudentServices"/>
  </aop:config>
  
<aop:config>
     <aop:aspect id="DBContextHolder" ref="DBContextHolders"> 
        <aop:pointcut id="DynamicDatasoruce" expression="execution(public * cn.edu.njupt.service.*.*(..))"/>
        <aop:before pointcut-ref="StudentServices" method="set1"/> 
          <aop:pointcut id="DynamicDatasoruces" expression="execution(public * cn.edu.njupt.log.*.log(..))"/>
        <aop:before pointcut-ref="DynamicDatasoruces" method="set2"/>
     </aop:aspect>
  </aop:config> 
 
 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
  <property name="dataSource" ref="dataSources" />
  <property name="annotatedClasses">
  <list>
    <value>cn.edu.njupt.model.Student</value>
    <value>cn.edu.njupt.model.Log</value>
    <value>cn.edu.njupt.model.Teacher</value>
  </list>
  </property>
  <property name="hibernateProperties">
     
    <value>
        hibernate.dialect=org.hibernate.dialect.MySQLDialect
        hibernate.show_sql=true
        hibernate.format_sql=true       
    </value>
  </property>
</bean>

<bean id="sessionFactory_oracle" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
  <property name="dataSource" ref="myDataSource_oracle" />
  <property name="annotatedClasses">
  <list>
    <value>cn.edu.njupt.model.Log</value>
  </list>
  </property>
  <property name="hibernateProperties">
    <value>
        hibernate.dialect=org.hibernate.dialect.Oracle9iDialect
        hibernate.show_sql=true
        hibernate.format_sql=true 
    </value>
  </property>
</bean>  


  
  <bean id="LogHander" class="cn.edu.njupt.log.LogHander">
  </bean>
  
   
  
  <bean id="LoggingTransaction" class="cn.edu.njupt.log.LoggingTransaction">
      <property name="sessionfactory" ref="sessionFactory_oracle"/>
  </bean> 
 
  <!-- <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
     <property name="basename" value="I18n/EN"/>
  </bean> -->

<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name="locations" value="classpath:jdbc.properties"/>
</bean>

 <bean id="dataSources" class="cn.edu.util.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry key="1" value-ref="myDataSource"/>  
                <entry key="2" value-ref="myDataSource_oracle"/>
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="myDataSource"/>  
    </bean>  
    
 
 <bean id="DBContextHolders" class="cn.edu.util.DBContextHolder">
  </bean>
 
</beans>